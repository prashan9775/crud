{"version":3,"sources":["store/initialState.js","store/reducer.js","Components/constants.js","store/store.js","Configurations.js","Components/ColorList.js","Components/NoteEditor.jsx","Components/AddNote.jsx","Components/Note.jsx","Components/NoteList.js","Components/FilterNote.jsx","Components/actions.js","App.js","AddNoteMain.js","serviceWorker.js","index.js"],"names":["store_initialState","notes","JSON","parse","localStorage","getItem","configuration","isBeingAdded","filterKey","updateLocalStorage","setItem","stringify","reducer","state","arguments","length","undefined","initialState","_ref","type","payload","currNotes","concat","Object","toConsumableArray","objectSpread","filter","v","timeStamp","key","configureStore","store","createStore","applyMiddleware","thunk","dispatch","Configurations","color","ColorList","currentSelected","onChange","react_default","a","createElement","className","css","styles","selectDropdown","select","map","c","selected","value","StyleSheet","create","position","backgroundColor","width","float","maxWidth","borderRadius","_select","fontFamily","fontSize","fontWeight","height","defineProperty","doneButton","padding","background","textAlign","marginRight","NoteEditor","addAction","_useState","useState","_useState2","slicedToArray","text","evaluateTextChange","_useState3","_useState4","evaluateColorChange","react","e","target","currentSeleected","onClick","App","zIndex","backgroundSize","backgroundPosition","transition","headerWrapper","boxShadow","flexRow","display","flexFlow","alignItems","justifyContent","container","paddingLeft","paddingRight","addNoteText","textDecoration","margin","layoutContainer","AddNote","dispatchAddNote","history","Components_NoteEditor","Date","now","push","addNote","Note","timestamp","deleteCB","dateObj","date","toDateString","getDate","getMinutes","getSeconds","notesItem","style","notesItemDiv","notesItemText","notesButton","notesItemDate","border","minHeight","marginTop","notesMain","verticalAlign","top","left","notesInnerDivItem","notesText","NoteList","dispatchDeleteNote","n","Note_Note","sidenav","_sidenav","paddingBottom","sidenavItems","sidenavItemsFilters","marginLeft","sidenavText","_sidenavText","React","memo","dispatchSetFilterKey","filterClicked","checked","name","console","log","deleteNote","setFilterKey","APP","props","app","react_router_dom","link","to","notesLayout","notesLayoutContainer","FilterNote","Components_NoteList","contextTypes","router","PropTypes","object","isRequired","connect","bindActionCreators","borderCollapse","borderSpacing","AddNoteMain","withRouter","Components_AddNote","Boolean","window","location","hostname","match","ReactDOM","hydrate","es","react_router","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.88dd4e19.chunk.js","sourcesContent":["function setNotesInitialState(){\n    let notes = JSON.parse(localStorage.getItem('notes'));\n    return notes || [];\n}\nexport default {\n    notes:setNotesInitialState(),\n    configuration:{\n        isBeingAdded: false,\n        filterKey: 'none',\n    }\n}","import initialState from '../store/initialState';\nimport {ADD_NOTE,DELETE_NOTE,SET_FILTER_KEY} from '../Components/constants';\n\nfunction updateLocalStorage(notes){\n    localStorage.setItem('notes', JSON.stringify(notes));\n}\n\nexport default (state=initialState,{type, payload}) => {\n    const configuration = state.configuration;\n    let currNotes = [];\n    switch(type) {\n        case ADD_NOTE:\n            currNotes = [...(state.notes),payload];\n            updateLocalStorage(currNotes);\n            return {\n                ...state,\n                notes:currNotes,\n                configuration: {\n                    ...configuration,\n                    isBeingAdded:false\n                }\n            }\n        case DELETE_NOTE: \n            currNotes = state.notes.filter(v => v.timeStamp !== payload.timeStamp);\n            updateLocalStorage(currNotes);\n            return {\n                ...state,\n                notes: state.notes.filter(v => v.timeStamp !== payload.timeStamp)\n            }\n        case SET_FILTER_KEY:\n            return {\n                ...state,\n                configuration: {\n                    ...configuration,\n                    filterKey: payload.key\n                }\n            }\n        default:\n            return state;\n    }\n}","export const ADD_NOTE = 'ADD_NOTE';\nexport const DELETE_NOTE = 'DELETE_NOTE';\nexport const SET_FILTER_KEY = 'SET_FILTER_KEY';\n","import { createStore, compose ,applyMiddleware} from \"redux\";\nimport reducer from \"./reducer\";\nimport thunk from 'redux-thunk';\n\nexport const configureStore = (initialState) => {\n    const store = createStore(\n        reducer,\n        initialState,\n        applyMiddleware(thunk)\n    );\n    store.dispatch({type:'action'})\n    return store;\n}\n\nexport default configureStore;","export default {\n    color: ['red','yellow','green','blue']\n}","import React from 'react';\nimport Configurations from '../Configurations';\nimport {\n    css,\n    StyleSheet,\n} from 'aphrodite/no-important';\n\nexport default ({\n    currentSelected,\n    onChange\n}) => (<div className={`${css(styles.selectDropdown)}`}>\n    <select className={`${css(styles.select)}`}\n        onChange={onChange}>\n        {Configurations.color.map(c => <option selected={currentSelected === c} value={c}>{c}</option>)}\n    </select>\n</div>)\n\nconst styles = StyleSheet.create({\n    selectDropdown: {\n        position: 'relative',\n        backgroundColor: '#e6e6e6',\n        width: 'auto',\n        float: 'left',\n        maxWidth: ' 100%',\n        borderRadius: 2,\n    },\n    select: {\n        fontFamily: \"helvetica neue\",\n        fontSize: '1rem',\n        fontWeight: '200',\n        maxWidth: '100%',\n        height: 40,\n        fontSize: 20,\n        fontWeight: 400,\n        width: 100,\n        border: 'none',\n        backgroundColor: 'transparent',\n    }\n});","import React, { Fragment, useState } from 'react';\nimport ColorList from './ColorList';\nimport Configurations from '../Configurations';\nimport {\n    css,\n    StyleSheet,\n} from 'aphrodite/no-important';\n\nconst NoteEditor = ({ addAction }) => {\n\n    const [text, evaluateTextChange] = useState('');\n    const [color, evaluateColorChange] = useState(Configurations.color[0]);\n\n    return <Fragment>\n        <ColorList onChange={(e)=> evaluateColorChange(e.target.value)} currentSeleected={color} />\n        <textarea onChange={(e)=>evaluateTextChange(e.target.value)}>{text}</textarea>\n        <button className={`${css(styles.doneButton)}`} onClick={() => addAction(text, color)} >Done</button>\n    </Fragment>\n}\n\nconst styles = StyleSheet.create({\n    doneButton: {\n        float: 'right',\n        padding: '1rem 2rem',\n        background: '#ddd',\n        fontSize: '1rem',\n        textAlign: 'center',\n        marginRight: 25\n    }\n});\n\nexport default NoteEditor;","import React, { Fragment } from 'react';\nimport NoteEditor from './NoteEditor';\nimport {\n    css,\n    StyleSheet,\n} from 'aphrodite/no-important';\n\nconst addNote = (text, color,dispatchAddNote,history) => {\n    dispatchAddNote(text, color, Date.now());\n    history.push('/');\n}\n\nconst AddNote = ({ dispatchAddNote,history}) => {\n    return <Fragment>\n        <header className={`${css(styles.App)}`}>\n            <div className={`${css(styles.headerWrapper)}`}>\n                <div className={`${css(styles.flexRow)} ${css(styles.container)}`}>\n                    <div className={`${css(styles.addNoteText)}`}>\n                        <span>Add a note</span>\n                    </div>\n                    <NoteEditor addAction={(text,color) => addNote(text,color,dispatchAddNote,history)} />\n                </div>\n            </div>\n        </header>\n    </Fragment>\n}\n\nconst styles = StyleSheet.create({\n    App: {\n        width: '100%',\n        zIndex: 30,\n        position: 'relative',\n        backgroundSize: 'cover',\n        backgroundPosition: '50% 0',\n        transition: 'background-color .3s, opacity .3s'\n    },\n    headerWrapper: {\n        boxShadow: '1px 1px 10px rgba(0,0,0,0.15)',\n        height: 80\n    },\n    flexRow: {\n        display: 'flex',\n        flexFlow: 'row nowrap',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        width: '100%'\n    },\n    container: {\n        paddingLeft: 15,\n        paddingRight: 15,\n    },\n    addNoteText: {\n        textDecoration: 'none',\n        display: 'block',\n        color: '#446084',\n        fontSize: 32,\n        fontWeight: 'bolder',\n        margin: 15\n    },\n    layoutContainer: {\n        display: 'table-row',\n        height: '100%',\n    }\n});\n\nexport default AddNote;","import React from 'react';\nimport {\n    css,\n    StyleSheet,\n} from 'aphrodite/no-important';\n\n\nexport const Note = ({ text, color,timestamp, deleteCB }) => {\n    if (typeof deleteCB == 'function' && text) {\n        let dateObj = new Date(timestamp);\n        let date = `${dateObj.toDateString()} ${dateObj.getDate()}-${dateObj.getMinutes()}-${dateObj.getSeconds()}`\n        return <div className={`${css(styles.notesItem)}`} style={{backgroundColor: color }}>\n                <div className={`${css(styles.notesItemDiv)}`}>\n                <span className={`${css(styles.notesItemText)}`}>{text}</span>\n                </div>\n            <button className={`${css(styles.notesButton)}`} onClick={deleteCB}>DELETE</button>\n            <div className={`${css(styles.notesItemDate)}`}>{`${date}`}</div>\n        </div>\n    }\n    return null;\n}\n\nconst styles = StyleSheet.create({\n    notesItem: {\n        border: '2px solid black',\n        margin: 2,\n        paddingLeft: 15,\n        minHeight: 100\n    },\n    notesItemDiv:{\n        display: 'block',\n    },\n    notesItemText: {\n        textDecoration: 'none',\n        color: '#446084',\n        fontSize: 32,\n        fontWeight: 'bolder',\n    },\n    notesItemDate:{\n        textDecoration: 'none',\n        color: 'black',\n        fontWeight: 'bolder',\n        marginTop:10\n    },\n    notesButton: {\n        float: 'right',\n        marginTop: -35,\n        padding: '1rem 2rem',\n        background: '#ddd',\n        fontSize: '1rem',\n        textAlign: 'center'\n    }\n});","import React from 'react';\nimport { Note } from './Note';\nimport {\n    css,\n    StyleSheet,\n} from 'aphrodite/no-important';\n\n\nconst NoteList = ({ filterKey, notes, dispatchDeleteNote }) => {\n    return <div className={`${css(styles.notesMain)}`}>\n        <span className={`${css(styles.notesText)}`}> Show list</span>\n        {\n            notes.map(n => {\n                if (filterKey !== 'none' && filterKey !== n.color) {\n                    return null;\n                }\n                return <div className={`${css(styles.notesInnerDivItem)}`}>\n                    <Note className={`${css(styles.notesItem)}`}\n                        text={n.text}\n                        color={n.color}\n                        timestamp={n.timeStamp}\n                        deleteCB={()=>dispatchDeleteNote(n.timeStamp)} />\n                </div>\n            })\n        }\n    </div>\n}\n\nconst styles = StyleSheet.create({\n    notesMain: {\n        display: 'table-cell',\n        backgroundColor: '#fff',\n        height: '100%',\n        width: 780,\n        verticalAlign: 'top',\n        top: 20,\n        position: 'relative',\n        left: 10\n    },\n    notesItem: {\n        border: '2px solid black',\n        margin: 2,\n        paddingLeft: 15\n    },\n    notesInnerDivItem: {\n        marginRight: 25\n    },\n    notesItemText: {\n        textDecoration: 'none',\n        display: 'block',\n        color: '#446084',\n        fontSize: 32,\n        fontWeight: 'bolder',\n    },\n    notesText: {\n        textDecoration: 'none',\n        display: 'block',\n        color: '#446084',\n        fontSize: 32,\n        fontWeight: 'bolder',\n    },\n    notesButton: {\n        float: 'right',\n        marginTop: -35,\n        padding: '1rem 2rem',\n        background: '#ddd',\n        fontSize: '1rem',\n        textAlign: 'center'\n    }\n});\n\nexport default NoteList;","import React from 'react';\nimport Configurations from '../Configurations';\n\nimport {\n    css,\n    StyleSheet,\n} from 'aphrodite/no-important';\n\nconst FilterNotes = ({ filterKey, dispatchSetFilterKey }) => {\n    const filterClicked = (e, filterKey, dispatchSetFilterKey) => {\n        if (e.target.type === 'checkbox' && e.target.value !== filterKey) {\n            dispatchSetFilterKey(e.target.value)\n        }\n    }\n    return (\n        <div className={`${css(styles.sidenav)}`} onClick={(e) => filterClicked(e, filterKey, dispatchSetFilterKey)}>\n            <span className={`${css(styles.sidenavText)}`}>Select Color Filters</span>\n            {\n                Configurations.color.map(v =>\n                    <span className={`${css(styles.sidenavItems)}`}>\n                        <input className={`${css(styles.sidenavItemsFilters)}`}\n                            type=\"checkbox\" checked={filterKey === v}\n                            name=\"colorFilter\"\n                            value={v} />{v}\n                    </span>)\n            }\n            <span className={`${css(styles.sidenavItems)}`}>\n                <input className={`${css(styles.sidenavItemsFilters)}`} type=\"checkbox\" name=\"colorFilter\" checked={filterKey === 'none'} value=\"none\" />{\"All\"}\n            </span>\n        </div>\n    )\n}\n\nconst styles = StyleSheet.create({\n    sidenav: {\n        display: 'table-cell',\n        background: '#eee',\n        width: 300,\n        verticalAlign: 'top',\n        paddingBottom: 60,\n        zIndex: 1,\n        top: 20,\n        left: 10,\n        background: '#eee',\n        overflowX: 'hidden',\n        padding: '8px 0',\n        top: 100,\n        height: '80%'\n    },\n    sidenavItems: {\n        display: 'block'\n    },\n    sidenavItemsFilters: {\n        float: 'left',\n        marginLeft: 20\n    },\n    sidenavText: {\n        display: 'block',\n        margin: 20,\n        textDecoration: 'none',\n        display: 'block',\n        color: '#446084',\n        fontSize: 32,\n        fontWeight: 'bolder',\n    }\n\n});\n\nexport default React.memo(FilterNotes);","import { ADD_NOTE, DELETE_NOTE, SET_FILTER_KEY } from './constants';\n\nexport const addNote = (text, color, timeStamp) => dispatch => {\n    console.log(dispatch);\n    dispatch({\n        type: ADD_NOTE,\n        payload: { text, color, timeStamp }\n    });\n}\n\nexport const deleteNote = (timeStamp) => dispatch =>{\n    dispatch({\n        type: DELETE_NOTE,\n        payload: {timeStamp }\n    });\n}\n\nexport const setFilterKey = (key) => dispatch => {\n    dispatch({\n        type: SET_FILTER_KEY,\n        payload: {key },\n    });\n}","import React from 'react';\nimport { NoteList, FilterNote } from \"./Components\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { addNote, deleteNote, setFilterKey } from './Components/actions';\nimport { css, StyleSheet } from 'aphrodite/no-important';\nimport PropTypes from 'prop-types';\nimport {\n  Link\n} from \"react-router-dom\";\nimport './App.css';\n\nconst APP = (props) => {\n  const { filterKey, notes } = props;\n  const { deleteNote, setFilterKey } = props;\n  return (\n    <div className={`${css(styles.app)}`}>\n      <Link className={`${css(styles.link)}`} to=\"/create\">Add a note</Link>\n      <div className={`${css(styles.notesLayout)}`}>\n        <div className={`${css(styles.notesLayoutContainer)}`}>\n          <FilterNote filterKey={filterKey} dispatchSetFilterKey={setFilterKey} />\n          <NoteList filterKey={filterKey} notes={notes} dispatchDeleteNote={deleteNote} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state = {}) => {\n  console.log(state);\n  return {\n    isBeingAdded: state.configuration ? state.configuration.isBeingAdded : false,\n    filterKey: state.configuration.filterKey,\n    notes: state.notes\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  addNote: bindActionCreators(addNote, dispatch),\n  deleteNote: bindActionCreators(deleteNote, dispatch),\n  setFilterKey: bindActionCreators(setFilterKey, dispatch)\n});\n\nAPP.contextTypes = {\n  router: PropTypes.object.isRequired,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(APP);\n\nconst styles = StyleSheet.create({\n  app: {\n    height: '100%'\n  },\n  notesLayout: {\n    display: 'table',\n    borderCollapse: 'separate',\n    borderSpacing: 0,\n    width: '100%',\n    height: '90%',\n    margin: 10,\n  },\n  notesLayoutContainer: {\n    display: 'table-row',\n    height: '100%'\n  },\n  link:{\n    display:'block',\n    height:50,\n    width:'100%',\n    backgroundColor:'chartreuse'\n  }\n});","import React from 'react';\nimport { AddNote} from \"./Components\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { addNote } from './Components/actions';\nimport PropTypes from 'prop-types';\nimport { withRouter } from \"react-router-dom\";\nimport './App.css';\n\nconst AddNoteMain = withRouter((props) => {\n  const { addNote,history} = props;\n  return (\n      <AddNote dispatchAddNote={addNote} history={history}/>\n  );\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  addNote: bindActionCreators(addNote, dispatch),\n});\n\nAddNoteMain.contextTypes = {\n    router           : PropTypes.object.isRequired, \n}\n\nexport default connect(()=>{}, mapDispatchToProps)(AddNoteMain);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./store/store\";\nimport initialState from './store/initialState';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport AddNoteMain from \"./AddNoteMain\";\nimport * as serviceWorker from './serviceWorker';\n\nconst store = configureStore(initialState);\n\nReactDOM.hydrate(\n    <Provider store={store}>\n        <Router >\n            <Switch>\n                <Route exact path=\"/\" component={App} />\n                <Route path=\"/create\" component={AddNoteMain} />\n            </Switch>\n        </Router>\n    </Provider>, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}